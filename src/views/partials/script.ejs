<script>
document.addEventListener('DOMContentLoaded', () => {

  fetch('/api/books', {
    credentials: "same-origin"
  })
  .then(response => response.json())
  .then(renderBooks)

  document.querySelector('.closeBtn').addEventListener('click', function() {
    document.querySelector('.modal').style.display = 'none'
  })
})

//How to know which user is signed in  ? Admin or Regular
const renderBooks = (books) => {
    books.sort((left, right) => left.id - right.id)
    document.querySelector(`#holder`).innerHTML = ""
    books.forEach(bookInfo => {
      let bookNode = document.querySelector('#templates').querySelector('.book').cloneNode(true)
      bookNode.querySelector('img').src = bookInfo.image_url
      bookNode.querySelector('.title').innerText = bookInfo.title

      addEventListeners(bookNode, bookInfo)


      document.querySelector(`#holder`).appendChild(bookNode)

    })

}


<% if (session.user.role === 'admin') { %>
const addEventListeners = (book, bookInfo) => {
  book.querySelector('.btn').innerText = 'Delete'
  book.querySelector('.btn').classList.add('btn','btn-danger')
  book.querySelector('.btn').addEventListener('click', function(e) {
    e.stopPropagation();
    fetch('/api/books/'+bookInfo.id, {
      method: "DELETE",
      credentials: "same-origin"
    })
    .then(() =>{
      console.log('yeah!')
      book.remove() })
  })
  book.addEventListener('click', function() {
    //inject the form to edit the book to modal
    document.querySelector('.modal-form').innerHTML = `
      <h2>Edit book:</h2>
      <form class="ui large form">
        <div class="field">
          <div class="ui left input">
          <label> Title: </label>
          <input id="title" value="${bookInfo.title}" type="text" />
          </div>
        </div>
        <div class="field">
          <div class="ui left input">
            <label> Image URL: </label>
            <input id="image_url" value="${bookInfo.image_url}" type="text" />
          </div>
        </div>
        <div class="field">
          <div class="ui left input">
            <label> ISBN: </label>
            <input id="isbn" value="${bookInfo.isbn}" type="text" />
          </div>
        </div>
        <div class="field">
          <div class="ui left input">
            <label> Price: </label>
            <input id="price" value="${bookInfo.price}" type="text" />
          </div>
        </div>
        <div class="field">
          <div class="ui left input">
            <label> Description: </label>
            <input id="description" value="${bookInfo.description}" type="text" />
          </div>
        </div>
        <div id="submit" class="ui fluid large primary submit button">
          Submit
        </div>
      </form>
    `
    document.querySelector('#submit').addEventListener('click', function () {
      let submission = {}
      submission.id = bookInfo.id
      submission.title = document.querySelector('#title').value
      submission.image_url = document.querySelector('#image_url').value
      submission.isbn = document.querySelector('#isbn').value
      submission.price = document.querySelector('#price').value
      submission.description = document.querySelector('#description').value
      document.querySelector('.modal').style.display = 'block'
      console.log(JSON.stringify(submission))
      console.log(`/api/books/${bookInfo.id}`)
      fetch('/api/books/'+bookInfo.id,
      {
        method: "PUT",
        credentials: "same-origin",
        body: JSON.stringify(submission),
        headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
        }
      })
      .then(response =>
        response.json()
      )
      .then(renderBooks)
      .then(() => document.querySelector('.modal').style.display = 'none')
    })

    document.querySelector('.modal').style.display = 'block'
  })
}
<% } else { %>
const addEventListeners = (book) => {
  book.querySelector('.btn').innerText = 'Add to Cart'
  book.querySelector('.btn').addEventListener('click', function(e) {
    e.stopPropagation();
    alert('This will Add book  to the cart')
  })
  book.addEventListener('click', function() {
    document.querySelector('.modal').style.display = 'block'
  })
}
<%} %>
const renderEditModal = () => {

}


/*

  We have out api setup to create read update and delete books

  First render login page.. After that,

  1) Display all books in the grid.
       Render the book will show EDIT and DELETE buttons if admin
       Render the book will show See More.. and Add To Cart if regular

  2) Clicking on "EDIT" on a button will bringup a modal with pre populated info
     of the book

  3) Clicking on add to cart will add the book to the cart

  3) Clicking on delete will remove the book from db and browser

  // newBook.querySelector('.btn').addEventListener('click', function() {
  //
  //   alert(`I should be the edit window for id: ${book.id}`)
  //   newBook.remove()
  // })
  // newBook.querySelector('.editbtn').book = book

 */
</script>
